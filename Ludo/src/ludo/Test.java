/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ludo;

import java.awt.Toolkit;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author Shreyas
 */
public class Test extends javax.swing.JFrame {

    /**
     * Creates new form Test
     */
    public Test() {
        initComponents();
        System.out.println("Game started");
        house = new House[4];
        playerName=new javax.swing.JTextField[4];
        
        house[0] = new House(red1,red2,red3,red4,"red");
        house[1] = new House(green1,green2,green3,green4,"green");
        house[2] = new House(yellow1,yellow2,yellow3,yellow4,"yellow");
        house[3] = new House(blue1,blue2,blue3,blue4,"blue");
        
        playerName[0]=txtPlayer1;
        playerName[1]=txtPlayer2;
        playerName[2]=txtPlayer3;
        playerName[3]=txtPlayer4;
        
        /*
        for (int i=0;i<4;i++) {
            house[i].disable();
        }
        */
        
        ranks = new LinkedList<String>();
        moveLog = new LimitedStack<>(100);
        
        
        FadingEffect fader = new FadingEffect();
        fader.Fade(this);
        
        move=new MoveLogs();
        
//        mainActivity=this;
//        
//        Thread fading = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                while (true) {
//                    int x=java.awt.MouseInfo.getPointerInfo().getLocation().x;
//                    int y=java.awt.MouseInfo.getPointerInfo().getLocation().y;
//                    if (x>mainActivity.getX()&&x<(mainActivity.getX()+mainActivity.getWidth())&&y>mainActivity.getY()&&y<(mainActivity.getY()+mainActivity.getHeight())) {
//                        mainActivity.setOpacity(1.0f);
//                    }
//                    else {
//                        mainActivity.setOpacity(0.75f);
//                    }
//                    try {
//                        Thread.sleep(100);
//                    } catch (Exception e) {
//                        
//                    }
//                }
//            }
//        });
//        fading.start();
    }

    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spinHighlighter1 = new javax.swing.JLabel();
        spinHighlighter2 = new javax.swing.JLabel();
        spinHighlighter3 = new javax.swing.JLabel();
        spinHighlighter4 = new javax.swing.JLabel();
        green1 = new javax.swing.JLabel();
        green2 = new javax.swing.JLabel();
        green3 = new javax.swing.JLabel();
        green4 = new javax.swing.JLabel();
        yellow1 = new javax.swing.JLabel();
        yellow2 = new javax.swing.JLabel();
        yellow3 = new javax.swing.JLabel();
        yellow4 = new javax.swing.JLabel();
        red1 = new javax.swing.JLabel();
        red2 = new javax.swing.JLabel();
        red3 = new javax.swing.JLabel();
        red4 = new javax.swing.JLabel();
        blue1 = new javax.swing.JLabel();
        blue2 = new javax.swing.JLabel();
        blue3 = new javax.swing.JLabel();
        blue4 = new javax.swing.JLabel();
        board = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        objDice = new javax.swing.JLabel();
        playerTurn = new javax.swing.JLabel();
        btnClose = new javax.swing.JLabel();
        btnMin = new javax.swing.JLabel();
        titleBar = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        txtPlayer4 = new javax.swing.JTextField();
        txtPlayer1 = new javax.swing.JTextField();
        txtPlayer2 = new javax.swing.JTextField();
        txtPlayer3 = new javax.swing.JTextField();
        btnUndo = new javax.swing.JButton();
        btnSettings = new javax.swing.JLabel();
        btnMainMenu = new javax.swing.JButton();
        backgroundThemeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/ludo/images/icon.png")));
        setUndecorated(true);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        spinHighlighter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin0.png"))); // NOI18N
        getContentPane().add(spinHighlighter1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 240, -1, -1));

        spinHighlighter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin0.png"))); // NOI18N
        getContentPane().add(spinHighlighter2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 210, -1, -1));

        spinHighlighter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin0.png"))); // NOI18N
        getContentPane().add(spinHighlighter3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 210, -1, -1));

        spinHighlighter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin0.png"))); // NOI18N
        getContentPane().add(spinHighlighter4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 180, -1, -1));

        green1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Green.png"))); // NOI18N
        green1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        green1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                green1MouseClicked(evt);
            }
        });
        getContentPane().add(green1, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 110, -1, -1));

        green2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Green.png"))); // NOI18N
        green2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        green2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                green2MouseClicked(evt);
            }
        });
        getContentPane().add(green2, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 110, -1, -1));

        green3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Green.png"))); // NOI18N
        green3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        green3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                green3MouseClicked(evt);
            }
        });
        getContentPane().add(green3, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 60, -1, -1));

        green4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Green.png"))); // NOI18N
        green4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        green4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                green4MouseClicked(evt);
            }
        });
        getContentPane().add(green4, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 60, -1, -1));

        yellow1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Yellow.png"))); // NOI18N
        yellow1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        yellow1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yellow1MouseClicked(evt);
            }
        });
        getContentPane().add(yellow1, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 109, -1, -1));

        yellow2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Yellow.png"))); // NOI18N
        yellow2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        yellow2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yellow2MouseClicked(evt);
            }
        });
        getContentPane().add(yellow2, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 109, -1, -1));

        yellow3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Yellow.png"))); // NOI18N
        yellow3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        yellow3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yellow3MouseClicked(evt);
            }
        });
        getContentPane().add(yellow3, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 59, -1, -1));

        yellow4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Yellow.png"))); // NOI18N
        yellow4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        yellow4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yellow4MouseClicked(evt);
            }
        });
        getContentPane().add(yellow4, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 59, -1, -1));

        red1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Red.png"))); // NOI18N
        red1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        red1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red1MouseClicked(evt);
            }
        });
        getContentPane().add(red1, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 363, -1, -1));

        red2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Red.png"))); // NOI18N
        red2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        red2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red2MouseClicked(evt);
            }
        });
        getContentPane().add(red2, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 363, -1, -1));

        red3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Red.png"))); // NOI18N
        red3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        red3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red3MouseClicked(evt);
            }
        });
        getContentPane().add(red3, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 313, -1, -1));

        red4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Red.png"))); // NOI18N
        red4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        red4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red4MouseClicked(evt);
            }
        });
        getContentPane().add(red4, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 313, -1, -1));

        blue1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Blue.png"))); // NOI18N
        blue1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        blue1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blue1MouseClicked(evt);
            }
        });
        getContentPane().add(blue1, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 362, -1, -1));

        blue2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Blue.png"))); // NOI18N
        blue2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        blue2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blue2MouseClicked(evt);
            }
        });
        getContentPane().add(blue2, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 362, -1, -1));

        blue3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Blue.png"))); // NOI18N
        blue3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        blue3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blue3MouseClicked(evt);
            }
        });
        getContentPane().add(blue3, new org.netbeans.lib.awtextra.AbsoluteConstraints(365, 312, -1, -1));

        blue4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/Blue.png"))); // NOI18N
        blue4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        blue4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blue4MouseClicked(evt);
            }
        });
        getContentPane().add(blue4, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 312, -1, -1));

        board.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/LudoBoard.png"))); // NOI18N
        board.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boardMouseClicked(evt);
            }
        });
        getContentPane().add(board, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        objDice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/dice1.png"))); // NOI18N
        objDice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                objDiceMouseClicked(evt);
            }
        });
        jPanel1.add(objDice, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, -1));

        playerTurn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        playerTurn.setForeground(new java.awt.Color(255, 0, 0));
        playerTurn.setText("LUDO");
        jPanel1.add(playerTurn, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, -1, -1));

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/close.png"))); // NOI18N
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });
        jPanel1.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 7, -1, -1));

        btnMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/min.png"))); // NOI18N
        btnMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMinMouseClicked(evt);
            }
        });
        jPanel1.add(btnMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 7, -1, -1));

        titleBar.setText("jLabel1");
        titleBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                titleBarMouseDragged(evt);
            }
        });
        titleBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                titleBarMousePressed(evt);
            }
        });
        jPanel1.add(titleBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(-450, 0, 730, 40));

        jPanel2.setBackground(new java.awt.Color(32, 33, 35));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(57, 113, 177));
        jLabel4.setText("1)");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 20, 20));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 210, 10));

        jLabel5.setBackground(new java.awt.Color(204, 204, 204));
        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(57, 113, 177));
        jLabel5.setText("2)");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 20, 20));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 210, 10));

        jLabel6.setBackground(new java.awt.Color(204, 204, 204));
        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(57, 113, 177));
        jLabel6.setText("3)");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 20, 20));
        jPanel2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 210, 10));

        jLabel7.setBackground(new java.awt.Color(204, 204, 204));
        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(57, 113, 177));
        jLabel7.setText("4)");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 20, 20));
        jPanel2.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 210, 10));

        txtPlayer4.setEditable(false);
        txtPlayer4.setBackground(new java.awt.Color(32, 33, 35));
        txtPlayer4.setForeground(new java.awt.Color(51, 51, 255));
        jPanel2.add(txtPlayer4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 180, -1));

        txtPlayer1.setEditable(false);
        txtPlayer1.setBackground(new java.awt.Color(32, 33, 35));
        txtPlayer1.setForeground(new java.awt.Color(255, 0, 0));
        jPanel2.add(txtPlayer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 180, -1));

        txtPlayer2.setEditable(false);
        txtPlayer2.setBackground(new java.awt.Color(32, 33, 35));
        txtPlayer2.setForeground(new java.awt.Color(0, 255, 0));
        jPanel2.add(txtPlayer2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 180, -1));

        txtPlayer3.setEditable(false);
        txtPlayer3.setBackground(new java.awt.Color(32, 33, 35));
        txtPlayer3.setForeground(new java.awt.Color(255, 255, 51));
        jPanel2.add(txtPlayer3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 180, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 210, 230, 180));

        btnUndo.setText("Undo");
        btnUndo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUndoMouseClicked(evt);
            }
        });
        jPanel1.add(btnUndo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, -1, -1));

        btnSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/settingsIcon.png"))); // NOI18N
        btnSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSettingsMouseClicked(evt);
            }
        });
        jPanel1.add(btnSettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 395, -1, -1));

        btnMainMenu.setText("Main Menu");
        btnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainMenuActionPerformed(evt);
            }
        });
        jPanel1.add(btnMainMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, -1, -1));

        backgroundThemeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/panelBackground.png"))); // NOI18N
        jPanel1.add(backgroundThemeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 450));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 280, 450));

        setSize(new java.awt.Dimension(728, 450));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void boardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boardMouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_boardMouseClicked

    private void blue4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blue4MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(3,3);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_blue4MouseClicked

    private void blue3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blue3MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(3,2);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_blue3MouseClicked

    private void blue2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blue2MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(3,1);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_blue2MouseClicked

    private void blue1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blue1MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(3,0);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_blue1MouseClicked

    private void red1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red1MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(0,0);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_red1MouseClicked

    private void red2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red2MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(0,1);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_red2MouseClicked

    private void red3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red3MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(0,2);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_red3MouseClicked

    private void red4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red4MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(0,3);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_red4MouseClicked

    private void yellow1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yellow1MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(2,0);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_yellow1MouseClicked

    private void yellow2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yellow2MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(2,1);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_yellow2MouseClicked

    private void yellow3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yellow3MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(2,2);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_yellow3MouseClicked

    private void yellow4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yellow4MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(2,3);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_yellow4MouseClicked

    private void green1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_green1MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(1,0);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_green1MouseClicked

    private void green2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_green2MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(1,1);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_green2MouseClicked

    private void green3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_green3MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(1,2);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_green3MouseClicked

    private void green4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_green4MouseClicked
        // TODO add your handling code here:
        Thread playerMove = new Thread(new Runnable(){
            @Override 
            public void run() {
                performMove(1,3);
            }
        });
        playerMove.start();
    }//GEN-LAST:event_green4MouseClicked

    private void objDiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_objDiceMouseClicked
        // TODO add your handling code here:
        if (once) {
            for (int i=0;i<4;i++) {
                playerName[i].setText(house[i].name);
                playerName[i].setEnabled(false);
            }
            while (!house[turn].isActive) {
                turn=(turn+1)%4;
            }
            playerName[turn].setEnabled(true);
            
            once=false;
            //System.out.println("Rolling");
            rollingDie();
            for (int i=0;i<4;i++) {
                house[i].initFirstBlock();
            }
            
            Thread spinners = new Thread(new Runnable() {
                @Override
                public void run() {
                    int s1 = (int)(Math.random()*12);
                    int s2 = (int)(Math.random()*12);
                    int s3 = (int)(Math.random()*12);
                    int s4 = (int)(Math.random()*12);
                    spinHighlighter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin"+s1+".png")));
                    spinHighlighter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin"+s2+".png")));
                    spinHighlighter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin"+s3+".png")));
                    spinHighlighter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin"+s4+".png")));
                    while (true) {
                        try {
                            s1=(s1+1)%12;
                            s2=(s2+1)%12;
                            s3=(s3+1)%12;
                            s4=(s4+1)%12;
                            spinHighlighter1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin"+s1+".png")));
                            spinHighlighter2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin"+s2+".png")));
                            spinHighlighter3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin"+s3+".png")));
                            spinHighlighter4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/spinner/spin"+s4+".png")));
                            
                            spinHighlighter1.setLocation(house[turn].token[0].getX()-6,house[turn].token[0].getY()-6);
                            spinHighlighter2.setLocation(house[turn].token[1].getX()-6,house[turn].token[1].getY()-6);
                            spinHighlighter3.setLocation(house[turn].token[2].getX()-6,house[turn].token[2].getY()-6);
                            spinHighlighter4.setLocation(house[turn].token[3].getX()-6,house[turn].token[3].getY()-6);
                            Thread.sleep(50);
                            
                        } catch (Exception e) {
                            
                        }
                    }
                }
            });
            spinners.start();
            spinHighlighter1.setVisible(true);
            spinHighlighter2.setVisible(true);
            spinHighlighter3.setVisible(true);
            spinHighlighter4.setVisible(true);
            
            
        }
    }//GEN-LAST:event_objDiceMouseClicked

    private void titleBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarMousePressed
        // TODO add your handling code here:
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_titleBarMousePressed

    private void titleBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarMouseDragged
        // TODO add your handling code here:
        this.setLocation(evt.getXOnScreen()-xMouse,evt.getYOnScreen()-yMouse);
    }//GEN-LAST:event_titleBarMouseDragged

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnCloseMouseClicked

    private void btnMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinMouseClicked
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_btnMinMouseClicked

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseMoved

    private void btnUndoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUndoMouseClicked
        // TODO add your handling code here:
        if (moveLog.size()>0) {
            String lastMove=moveLog.pop();
            String mv[]=lastMove.trim().split(" ");
            int arr[]=new int[mv.length];
            for (int i=0;i<arr.length;i++) 
                arr[i]=Integer.valueOf(mv[i]);
            for (int i=0,k=0;i<4;i++) {
                for (int j=0;j<4;j++,k++) {
                    house[i].locIndex[j]=arr[k];
                }
                house[i].setToPos();
            }
            turn=arr[16];
            ran=arr[17];
            for (int i=0;i<4;i++) {
                playerName[i].setEnabled(false);
            }
            playerName[turn].setEnabled(true);
            playerTurn.setForeground(playerName[turn].getForeground());
            if (ran!=0)
                objDice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/dice"+ran+".png")));
        }
    }//GEN-LAST:event_btnUndoMouseClicked

    private void btnSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSettingsMouseClicked
        // TODO add your handling code here:
        Settings setting = new Settings();
        setting.selectFrame(this);
        setting.setVisible(true);
    }//GEN-LAST:event_btnSettingsMouseClicked

    private void btnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainMenuActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new MainMenu().setVisible(true);
    }//GEN-LAST:event_btnMainMenuActionPerformed

    private void performMove(int hou,int id) {
        if (hou!=turn) {
            System.out.println("Invalid");
            return;
        }
            
        if (house[turn].isPossible(id,ran)) {
            //System.out.println("Moving");
            
            
            
            Thread anim = new Thread(new Runnable() {
                @Override 
                public void run() {
                    //System.out.println("Paused");
                    //pause=true;
                    //for (int i=0;i<ran;i++)
                        house[turn].move(id,ran);
                    //pause=false;
                    //System.out.println("Resumed");
                }
            });
            anim.start();
            
            try {
                Thread.sleep(3000);
            } catch (Exception e) {
                
            }
            
            //house[turn].move(id,ran);
            //while (pause);
            //System.out.println("Moved");
            house[turn].show();
            int hit=house[turn].attack(id, house); // checking whom to attack
            if (hit!=55) {
                Thread kill = new Thread(new Runnable() {
                    @Override 
                    public void run() {
                        house[hit/10].kill(hit%10); // attacking the specified token
                        //turn=(turn+1)%4;
                        rollingDie();
                    }
                });
                kill.start();
                
            }
            else {
                if (hasCompleted(turn,id)&&house[turn].finished<4) {
                    extraMove=true;
                }
                if (house[turn].finished==4) {
                    // current house has completed
                    System.out.println("The winner is : "+house[turn].name);
                    if (sounds) {
                        InputStream in;
                        try {
                            in = new FileInputStream(new File("src\\ludo\\sounds\\winning.wav"));
                            AudioStream audio = new AudioStream(in);
                            AudioPlayer.player.start(audio);
                        } catch(Exception e) {

                        }
                    }
                    
                    ranks.add(house[turn].name);
                    numCompleted++;
                    if (numCompleted+1==numActive) {
                        // Game Over
                        GameOverStandalone game = new GameOverStandalone();
                        game.ranks=this.ranks;
                        game.showList();
                        game.setLocation(this.getX(),this.getY());
                        this.setVisible(false);
                        game.setVisible(true);
                    }
                }
                if (!extraMove) {
                    turn=(turn+1)%4;
                    while (!house[turn].isActive) {
                        turn=(turn+1)%4;
                    }
                }
                    
                rollingDie();
            }    
            
        }
    }
    
    private void rollingDie() {
        pause=true;
        storeMove();
        for (int i=0;i<4;i++) {
            playerName[i].setEnabled(false);
        }
        playerName[turn].setEnabled(true);
        /*
        switch (turn) {
            case 0:
                playerTurn.setForeground(new java.awt.Color(255, 0, 0));
                //txtPlayer1.setEnabled(true);
                //playerTurn.setText("RED");
                break;
            case 1:
                playerTurn.setForeground(new java.awt.Color(0, 255, 0));
                //txtPlayer2.setEnabled(true);
                // playerTurn.setText("GREEN");
                break;
            case 2:
                playerTurn.setForeground(new java.awt.Color(255, 255, 51));
                //txtPlayer3.setEnabled(true);
                //playerTurn.setText("YELLOW");
                break;
            case 3:
                playerTurn.setForeground(new java.awt.Color(0, 0, 255));
                //txtPlayer4.setEnabled(true);
                //playerTurn.setText("BLUE");
                break;
        }
        */
//        for (int i=0;i<4;i++) {
//            playerName[i].setEnabled(false);
//        }
//        playerName[turn].setEnabled(true);
        playerTurn.setForeground(playerName[turn].getForeground());
        //playerTurn.setText(playerName[turn].getText());
        /*
        for (int i=0;i<4;i++) {
            house[i].disable();
        }
        house[turn].enable();
        */
        Thread roll = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    //System.out.println("Started rolling");
                    //house[turn].currentTurn();
                    for (int i=0;i<10;i++) {
                        int random=((int)(Math.random()*6))+1;
                        objDice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/dice"+random+".png")));
                        Thread.sleep(50);
                    }
                    for (int i=0;i<5;i++) {
                        int random=((int)(Math.random()*6))+1;
                        objDice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/dice"+random+".png")));
                        Thread.sleep(100);
                    }
                    int random=((int)(Math.random()*6))+1;
                    objDice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/dice"+random+".png")));
                    ran=random;
                    if (ran==6) {
                        extraMove=true;
                    }
                    else {
                        extraMove=false;
                    }
                    pause=false;
                    //System.out.println("Done rolling");
                    rollDie();
                }
                catch (Exception e) {
                    //System.out.println("Problem rolling");
                }
            }
        });
        roll.start();
    }
    
    private void rollDie() {
        
        if (!pause) {
            System.out.println(house[turn].color+":"+ran);
            int possible=0;
            int id=0;
            int allSame=-1;
            for (int i=0;i<4;i++) {
                if (house[turn].isPossible(i,ran)) {
                    possible++;
                    id=i;
                    if (allSame==-1) {
                        allSame=house[turn].locIndex[id]; // location of token with possible move
                    }
                    else if (allSame!=house[turn].locIndex[id]){
                        allSame=-2;
                    }
                }
            }

            if (possible==0) {
                // no possible moves
                try {
                    Thread.sleep(1000);
                } catch (Exception e) {
                    ;
                }
                turn=(turn+1)%4;
                while (!house[turn].isActive) {
                    turn=(turn+1)%4;
                }
                rollingDie();

            }
            
            if (autoMode) {
                if (possible==1) {
                    // only one possible move
                    try {
                        Thread.sleep(1000);
                    } catch (Exception e) {
                        ;
                    }
                    performMove(turn,id);
                }

                else if (allSame!=-2&&allSame!=-1) {
                    // all same moves
                    try {
                        Thread.sleep(1000);
                    } catch (Exception e) {
                        ;
                    }
                    performMove(turn,id);
                }
            }
            
            
        }
        
    }
    
    public void storeMove() {
        // Storing the previous state
            
        String str="";
        for (int i=0;i<4;i++) {
            for (int j=0;j<4;j++) {
                str=str+" "+(house[i].locIndex[j]);
            }
        }
        str=str+" "+turn+" "+ran;
        System.out.println(str);
        moveLog.push(str);
        if (debugMove) {
            move.setVisible(true);
            move.showData(str);
        }
        else {
            move.setVisible(false);
        }
    }
    
    public void writeFile(String data) {
        try
        {
            FileWriter fw = new FileWriter("move.log");
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter p = new PrintWriter(bw);
            p.println(data);
            p.flush();
            fw.close();
        }
        catch (Exception e)
        {
            System.out.println("Writing error");
        } 
    }
    
    public boolean hasCompleted(int hou,int id) {
        if (house[hou].locIndex[id]==57) {
            house[hou].finished++;
            if (house[hou].finished==4) {
                house[hou].isActive=false;
                house[hou].deactivate();
            }
            return true;
        }
        return false;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test().setVisible(true);
            }
        });
    }
    
    House house[];
    int turn=0;
    int ran=0;
    boolean once=true;
    boolean pause=false;
    boolean extraMove=false;
    int xMouse,yMouse;
    int numCompleted;
    int numActive;
    javax.swing.JTextField playerName[];
    Queue<String> ranks;
    LimitedStack<String> moveLog; 
    public boolean autoMode=true;
    public boolean debugMove=false;
    public boolean sounds=true;
    MoveLogs move;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundThemeLabel;
    private javax.swing.JLabel blue1;
    private javax.swing.JLabel blue2;
    private javax.swing.JLabel blue3;
    private javax.swing.JLabel blue4;
    private javax.swing.JLabel board;
    private javax.swing.JLabel btnClose;
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JLabel btnMin;
    private javax.swing.JLabel btnSettings;
    private javax.swing.JButton btnUndo;
    private javax.swing.JLabel green1;
    private javax.swing.JLabel green2;
    private javax.swing.JLabel green3;
    private javax.swing.JLabel green4;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel objDice;
    private javax.swing.JLabel playerTurn;
    private javax.swing.JLabel red1;
    private javax.swing.JLabel red2;
    private javax.swing.JLabel red3;
    private javax.swing.JLabel red4;
    private javax.swing.JLabel spinHighlighter1;
    private javax.swing.JLabel spinHighlighter2;
    private javax.swing.JLabel spinHighlighter3;
    private javax.swing.JLabel spinHighlighter4;
    private javax.swing.JLabel titleBar;
    private javax.swing.JTextField txtPlayer1;
    private javax.swing.JTextField txtPlayer2;
    private javax.swing.JTextField txtPlayer3;
    private javax.swing.JTextField txtPlayer4;
    private javax.swing.JLabel yellow1;
    private javax.swing.JLabel yellow2;
    private javax.swing.JLabel yellow3;
    private javax.swing.JLabel yellow4;
    // End of variables declaration//GEN-END:variables
}
