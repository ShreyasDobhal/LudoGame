/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ludo;

import java.awt.Toolkit;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Shreyas
 */
public class Waiting extends javax.swing.JFrame {

    /**
     * Creates new form Settings
     */
    public Waiting(Server mainActivity,ServerSocket ss,int port) {
        initComponents();
        this.mainActivity=mainActivity;
        this.ss=ss;
        //move=new MoveLogs();
        waitAnimation();
        this.port=port;
        try {
            connect();
        }
        catch (Exception e) {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        processBar = new javax.swing.JProgressBar();
        txtMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/ludo/images/icon.png")));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(33, 35, 37));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCancel.setBackground(new java.awt.Color(126, 87, 194));
        btnCancel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 90, -1));

        btnStart.setBackground(new java.awt.Color(126, 87, 194));
        btnStart.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnStart.setText("Start");
        btnStart.setEnabled(false);
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        jPanel1.add(btnStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 280, 90, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/settingsIcon.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        processBar.setForeground(new java.awt.Color(0, 255, 0));
        processBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                processBarMouseClicked(evt);
            }
        });
        jPanel1.add(processBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 110, 290, -1));

        txtMessage.setForeground(new java.awt.Color(255, 255, 255));
        txtMessage.setText("Waiting for Clients ...");
        jPanel1.add(txtMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 380));

        setSize(new java.awt.Dimension(404, 377));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        FadingEffect fader = new FadingEffect();
        fader.fadeAway(this);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        this.setLocation(evt.getXOnScreen()-xMouse,evt.getYOnScreen()-yMouse);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        
        //LAN game = new LAN();
        mainActivity.ready(clients);
        
        FadingEffect fader = new FadingEffect();
        fader.fadeAway(this);
    }//GEN-LAST:event_btnStartActionPerformed

    private void processBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_processBarMouseClicked
        // TODO add your handling code here:
        processBar.setValue(50);
    }//GEN-LAST:event_processBarMouseClicked

    public void connect()throws Exception {
        
        //ServerSocket ss = 
        Thread connectClients = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    int i=0;
                    while (search) {
                        Socket tmp = ss.accept(); // Estb. connection
                        clients.add(new Sockets(mainActivity,tmp,i));
                        clients.get(i).start();
                        txtMessage.setText((i+1)+" Client/s found");
                        btnStart.setEnabled(true);
                        i++;
                        if (i==3) {
                            search=false;
                        }
                    }
                    
                }
                catch (Exception e) {
                    
                }
            }
        });
        connectClients.start();
        
        Thread send = new Thread(new Runnable () {
            @Override
            public void run() {
                Scanner sc = new Scanner(System.in);
                while (true) {
                    String str=sc.nextLine();
                    try {
                        for (int i=0;i<clients.size();i++) {
                            clients.get(i).write(str);
                        }
                        
                    }
                    catch (Exception e) {
                        
                    }
                }
            }
        });
        send.start();
        
        //while (true);
    }
    
    public void waitAnimation() {
        Thread anim = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    while (search) {
                        processBar.setValue(processVal);
                        processVal+=2;
                        Thread.sleep(30);
                        if (processVal>100)
                            processVal=0;
                    }
                    processBar.setValue(100);
                }
                catch (Exception e) {
                    
                }
                
            }
        });
        anim.start();
    }
    
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Waiting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Waiting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Waiting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Waiting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Waiting().setVisible(true);
//            }
//        });
//    }
    
    int xMouse,yMouse;
    int processVal;
    boolean search=true;
    public List<Sockets> clients = new ArrayList<>();
    int port;
    Server mainActivity;
    ServerSocket ss;
    //Test mainActivity;
    //boolean autoMode;
    //boolean debug;
    //boolean sounds;
    //MoveLogs move;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar processBar;
    private javax.swing.JLabel txtMessage;
    // End of variables declaration//GEN-END:variables
}
