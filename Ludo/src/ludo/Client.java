/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ludo;

import java.awt.Toolkit;
import java.awt.Frame;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author Shreyas
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public Client() {
        initComponents();
        
        FadingEffect fader = new FadingEffect();
        fader.Fade(this);
        
        current=this;
        
        game = new LAN();
        game.setServer(false);
        
//        mainActivity=this;
//        
//        Thread fading = new Thread(new Runnable() {
//            @Override
//            public void run() {
//                while (true) {
//                    int x=java.awt.MouseInfo.getPointerInfo().getLocation().x;
//                    int y=java.awt.MouseInfo.getPointerInfo().getLocation().y;
//                    if (x>mainActivity.getX()&&x<(mainActivity.getX()+mainActivity.getWidth())&&y>mainActivity.getY()&&y<(mainActivity.getY()+mainActivity.getHeight())) {
//                        mainActivity.setOpacity(1.0f);
//                    }
//                    else {
//                        mainActivity.setOpacity(0.75f);
//                    }
//                    try {
//                        Thread.sleep(100);
//                    } catch (Exception e) {
//                        
//                    }
//                }
//            }
//        });
//        fading.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMin = new javax.swing.JLabel();
        btnClose = new javax.swing.JLabel();
        titleBar = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        editPort = new javax.swing.JCheckBox();
        btnJoin = new javax.swing.JButton();
        errorDialog = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtIP = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/ludo/images/icon.png")));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/min.png"))); // NOI18N
        btnMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMinMouseClicked(evt);
            }
        });
        getContentPane().add(btnMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(647, 9, -1, -1));

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/close.png"))); // NOI18N
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(692, 9, -1, -1));

        titleBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                titleBarMouseDragged(evt);
            }
        });
        titleBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                titleBarMousePressed(evt);
            }
        });
        getContentPane().add(titleBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 40));

        jPanel1.setBackground(new java.awt.Color(33, 35, 37));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtName.setBackground(new java.awt.Color(32, 33, 35));
        txtName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtName.setForeground(new java.awt.Color(255, 255, 255));
        txtName.setBorder(null);
        txtName.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 190, 20));

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(57, 113, 177));
        jLabel4.setText("Name : ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 190, 10));

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(57, 113, 177));
        jLabel5.setText("Port : ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        txtPort.setEditable(false);
        txtPort.setBackground(new java.awt.Color(32, 33, 35));
        txtPort.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtPort.setForeground(new java.awt.Color(255, 255, 255));
        txtPort.setText("5077");
        txtPort.setBorder(null);
        txtPort.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtPort, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 100, 60, 20));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 50, 10));

        editPort.setBackground(new java.awt.Color(33, 35, 37));
        editPort.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        editPort.setForeground(new java.awt.Color(57, 113, 177));
        editPort.setText("  Edit");
        editPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPortActionPerformed(evt);
            }
        });
        jPanel1.add(editPort, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        btnJoin.setBackground(new java.awt.Color(126, 87, 194));
        btnJoin.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnJoin.setForeground(new java.awt.Color(255, 255, 255));
        btnJoin.setText("Join");
        btnJoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinActionPerformed(evt);
            }
        });
        jPanel1.add(btnJoin, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 100, -1));

        errorDialog.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(errorDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 300, 20));

        btnStart.setBackground(new java.awt.Color(126, 87, 194));
        btnStart.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnStart.setForeground(new java.awt.Color(255, 255, 255));
        btnStart.setText("Start");
        btnStart.setEnabled(false);
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        jPanel1.add(btnStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 280, 100, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(57, 113, 177));
        jLabel6.setText("IP : ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        txtIP.setEditable(false);
        txtIP.setBackground(new java.awt.Color(32, 33, 35));
        txtIP.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtIP.setForeground(new java.awt.Color(255, 255, 255));
        txtIP.setText("localhost");
        txtIP.setBorder(null);
        txtIP.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtIP, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 140, 20));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 170, 10));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 340, 320));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ludo/images/mainBackground.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 450));

        setSize(new java.awt.Dimension(730, 450));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void titleBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarMousePressed
        // TODO add your handling code here:
        xMouse=evt.getX();
        yMouse=evt.getY();
    }//GEN-LAST:event_titleBarMousePressed

    private void titleBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleBarMouseDragged
        // TODO add your handling code here:
        this.setLocation(evt.getXOnScreen()-xMouse,evt.getYOnScreen()-yMouse);
    }//GEN-LAST:event_titleBarMouseDragged

    private void btnMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinMouseClicked
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_btnMinMouseClicked

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnCloseMouseClicked

    private void editPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPortActionPerformed
        // TODO add your handling code here:
        txtPort.setEditable(editPort.isSelected());
        txtIP.setEditable(editPort.isSelected());
    }//GEN-LAST:event_editPortActionPerformed

    private void btnJoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJoinActionPerformed
        // TODO add your handling code here:
        String name=txtName.getText();
        String port=txtPort.getText();
        if (name.equals("")||name.equals(null)) {
            errorDialog.setText(" * Enter name");
        }
        else if (!isValid(port)) {
            errorDialog.setText(" * Enter a valid port");
            txtPort.setText("5077");
        }
        else {
            try {
                int portNum=Integer.valueOf(port);
                String hostIP=txtIP.getText();
                try {
                    game.s = new Socket(hostIP,5077);
                    System.out.println("Connected to "+hostIP);
                }
                catch (Exception e) {
                    game.s = new Socket("localhost",5077);
                    System.out.println("Connected by default to localhost");
                }
                
                game.dis = new DataInputStream(game.s.getInputStream());
                game.dos = new DataOutputStream(game.s.getOutputStream());
                InputStreamReader isr = new InputStreamReader(System.in);
                BufferedReader stdin = new BufferedReader(isr);
                String s1="",s2="";

                

                Thread receive = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        try {
                            while (true) {
                                String str=game.dis.readUTF();
                                System.out.println("Server : "+str);
                                // Client Server commmands
                                // All server client commands to be written here
                                // for client
                                if (str.equals("getname")) {
                                    System.out.println("Asked for names");
                                    sendData("name:"+txtName.getText());
                                    sendData("ok");
                                }
                                else if (str.equals("start")) {
                                    // game starts
                                    
                                    //LAN game = new LAN();
                                    current.setVisible(false);
                                    game.setVisible(true);
                                    System.out.println("Game set visible");
                                }
                                else if (str.startsWith("getReady")) {
                                    String tmp[]=str.split(":");
                                    System.out.println(Arrays.toString(tmp));
                                    for (int i=0;i<4;i++) {
                                        game.names[i]=tmp[i+1];
                                        if (tmp[i+1].equals("")||tmp[i+1].equals(null)) {
                                            game.house[i].isActive=false;
                                            //game.house[i].
                                        }
                                        else {
                                            game.house[i].isActive=true;
                                            //game.t
                                        }
                                    }
                                    game.getReady();
                                }
                                else if (str.startsWith("dice")) {
                                    System.out.println(str);
                                    game.turn=Integer.valueOf(str.substring(str.indexOf(':')+1,str.lastIndexOf(':')));
                                    game.ran=Integer.valueOf(str.substring(str.lastIndexOf(':')+1));
                                    System.out.println(game.ran);
                                    game.showDice();
                                }
                                else if (str.startsWith("move")) {
                                    System.out.println(str);
                                    String tmp[]=str.split(" ");
                                    Thread copyMove = new Thread(new Runnable() {
                                        @Override
                                        public void run() {
                                            //System.out.println(Arrays.toString(tmp));
                                            //System.out.println(Arrays.toString(new String[]{"move","","0","0","0"}));
                                            for (int i=0,k=0;i<4;i++) {
                                                for (int j=0;j<4;j++,k++) {
                                                    game.house[i].locIndex[j]=Integer.valueOf(tmp[k+2]);
                                                }
                                                game.house[i].setToPos();
                                            }
                                        }
                                    });
                                    copyMove.start();
                                    
                                    //game.turn=tmp[16];
                                    //game.ran=tmp[17];
                                }
                            }
                            //dos.close();
                            //s.close();
                        }
                        catch (Exception e){
                            System.out.println("Some major issue"+e);
                        }
                        
                    }
                });
                receive.start();
                
                // The code is written in such a way that the client will be the first to ping
                // then client will wait for the server to respond it is just like synchronous communication
                
                
            }
            catch (Exception e) {
                
            }
            
        }
    }//GEN-LAST:event_btnJoinActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStartActionPerformed

    public void sendData(String str) {
        try {
            System.out.println(str);
            game.dos.writeUTF(str);
            game.dos.flush();
        }
        catch (Exception e) {
            System.out.println("Some error"+e);
            
        }
    }
    
    private boolean isValid(String str) {
        try {
            int num=Integer.valueOf(str);
        }
        catch (Exception e) {
            return false;
        }
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }
    
    int xMouse,yMouse;
    Client current;
//    Socket s;
//    DataInputStream dis;
//    DataOutputStream dos;
    LAN game;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel btnClose;
    private javax.swing.JButton btnJoin;
    private javax.swing.JLabel btnMin;
    private javax.swing.JButton btnStart;
    private javax.swing.JCheckBox editPort;
    private javax.swing.JLabel errorDialog;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel titleBar;
    private javax.swing.JTextField txtIP;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables
}
